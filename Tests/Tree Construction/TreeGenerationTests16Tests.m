// This file was autogenerated from Tests/html5lib/tree-construction/tests16.dat

#import <XCTest/XCTest.h>
#import "HTMLTreeConstructionTestUtilities.h"

@interface TreeGenerationTests16Tests : XCTestCase

@end

@implementation TreeGenerationTests16Tests

- (void)test000
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test001
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script>a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test002
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test003
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test004
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></S"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</S\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test005
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SC"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</SC\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test006
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SCR"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</SCR\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test007
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SCRI"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</SCRI\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test008
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SCRIP"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</SCRIP\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test009
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SCRIPT"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</SCRIPT\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test010
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></SCRIPT "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test011
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test012
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></sc"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</sc\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test013
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></scr"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</scr\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test014
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></scri"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</scri\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test015
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></scrip"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</scrip\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test016
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"</script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test017
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script></script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test018
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test019
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test020
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!-"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!-\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test021
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!-a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!-a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test022
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test023
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test024
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test025
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test026
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--</"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--</\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test027
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--</script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--</script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test028
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--</script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test029
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test030
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test031
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test032
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script <"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script <\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test033
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script <a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script <a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test034
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test035
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test036
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test037
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </scripta"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </scripta\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test038
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test039
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test040
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script/\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test041
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script <"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script <\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test042
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script <a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script <a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test043
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script </"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script </\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test044
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script </script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script </script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test045
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script </script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test046
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script </script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test047
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script </script </script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test048
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script -"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test049
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script -a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test050
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script -<"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test051
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test052
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test053
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --<"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test054
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script -->"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test055
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --><"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --><\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test056
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --></"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --></\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test057
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --></script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --></script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test058
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --></script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test059
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --></script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test060
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script --></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test061
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script><\\/script>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script><\\/script>-->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test062
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></scr'+'ipt>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></scr'+'ipt>-->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test063
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test064
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script>--><!--</script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>--><!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test065
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script>-- ></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>-- >\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test066
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script>- -></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>- ->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test067
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script>- - ></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>- - >\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test068
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></script><script></script>-></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test069
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script>--!></script>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script>--!></script>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test070
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<scr'+'ipt></script>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<scr'+'ipt>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test071
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><script><!--<script></scr'+'ipt></script>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></scr'+'ipt></script>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test072
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--<style></style>--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--<style>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test073
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--</style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test074
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--...</style>...--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--...\"\n|   <body>\n|     \"...-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test075
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--<br><html xmlns:v=\"urn:schemas-microsoft-com:vml\"><!--[if !mso]><style></style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--<br><html xmlns:v=\"urn:schemas-microsoft-com:vml\"><!--[if !mso]><style>\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test076
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--...<style><!--...--!></style>--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--...<style><!--...--!>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test077
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style><!--...</style><!-- --><style>@import ...</style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"<!--...\"\n|     <!--   -->\n|     <style>\n|       \"@import ...\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test078
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style>...<style><!--...</style><!-- --></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"...<style><!--...\"\n|     <!--   -->\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test079
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><style>...<!--[if IE]><style>...</style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <style>\n|       \"...<!--[if IE]><style>...\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test080
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><title><!--<title></title>--></title>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <title>\n|       \"<!--<title>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test081
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><title>&lt;/title></title>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <title>\n|       \"</title>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test082
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><title>foo/title><link></head><body>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <title>\n|       \"foo/title><link></head><body>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test083
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noscript><!--<noscript></noscript>--></noscript>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <noscript>\n|       \"<!--<noscript>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test084
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noscript><!--</noscript>X<noscript>--></noscript>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <noscript>\n|       \"<!--\"\n|   <body>\n|     \"X\"\n|     <noscript>\n|       \"-->\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test085
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noscript><iframe></noscript>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <noscript>\n|       \"<iframe>\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test086
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noframes><!--<noframes></noframes>--></noframes>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <noframes>\n|       \"<!--<noframes>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test087
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noframes><body><script><!--...</script></body></noframes></html>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|     <noframes>\n|       \"<body><script><!--...</script></body>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test088
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><textarea><!--<textarea></textarea>--></textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"<!--<textarea>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test089
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><textarea>&lt;/textarea></textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"</textarea>\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test090
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><textarea>&lt;</textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"<\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test091
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><textarea>a&lt;b</textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"a<b\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test092
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><iframe><!--<iframe></iframe>--></iframe>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <iframe>\n|       \"<!--<iframe>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test093
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><iframe>...<!--X->...<!--/X->...</iframe>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <iframe>\n|       \"...<!--X->...<!--/X->...\"\n");
    HTMLAssertParserState(parser, 0, fixture);
}

- (void)test094
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><xmp><!--<xmp></xmp>--></xmp>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <xmp>\n|       \"<!--<xmp>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test095
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><noembed><!--<noembed></noembed>--></noembed>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <noembed>\n|       \"<!--<noembed>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test096
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test097
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script>a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test098
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test099
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test100
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></S"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</S\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test101
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SC"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</SC\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test102
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SCR"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</SCR\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test103
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SCRI"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</SCRI\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test104
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SCRIP"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</SCRIP\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test105
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SCRIPT"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</SCRIPT\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test106
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></SCRIPT "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test107
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test108
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></sc"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</sc\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test109
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></scr"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</scr\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test110
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></scri"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</scri\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test111
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></scrip"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</scrip\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test112
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"</script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test113
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script></script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test114
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test115
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test116
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!-"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!-\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test117
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!-a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!-a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test118
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test119
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test120
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test121
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test122
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--</"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--</\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test123
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--</script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--</script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test124
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--</script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test125
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test126
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test127
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test128
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script <"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script <\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test129
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script <a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script <a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test130
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test131
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </s"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </s\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test132
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test133
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </scripta"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </scripta\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test134
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test135
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test136
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script/\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test137
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script <"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script <\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test138
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script <a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script <a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test139
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script </"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script </\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test140
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script </script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script </script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test141
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script </script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test142
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script </script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test143
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script </script </script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script </script \"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test144
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script -"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test145
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script -a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test146
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test147
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --a"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --a\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test148
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script -->"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test149
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --><"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --><\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test150
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --></"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --></\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test151
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --></script"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script --></script\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test152
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --></script "];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test153
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --></script/"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test154
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script --></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script -->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test155
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script><\\/script>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script><\\/script>-->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test156
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></scr'+'ipt>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></scr'+'ipt>-->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test157
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test158
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script>--><!--</script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>--><!--\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test159
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script>-- ></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>-- >\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test160
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script>- -></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>- ->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test161
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script>- - ></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>- - >\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test162
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></script><script></script>-></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></script><script></script>->\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test163
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script>--!></script>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script>--!></script>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test164
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<scr'+'ipt></script>--></script>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<scr'+'ipt>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test165
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<script><!--<script></scr'+'ipt></script>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <script>\n|       \"<!--<script></scr'+'ipt></script>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test166
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--<style></style>--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--<style>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test167
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--</style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test168
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--...</style>...--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--...\"\n|   <body>\n|     \"...-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test169
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--<br><html xmlns:v=\"urn:schemas-microsoft-com:vml\"><!--[if !mso]><style></style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--<br><html xmlns:v=\"urn:schemas-microsoft-com:vml\"><!--[if !mso]><style>\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test170
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--...<style><!--...--!></style>--></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--...<style><!--...--!>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test171
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style><!--...</style><!-- --><style>@import ...</style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"<!--...\"\n|     <!--   -->\n|     <style>\n|       \"@import ...\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test172
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style>...<style><!--...</style><!-- --></style>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"...<style><!--...\"\n|     <!--   -->\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test173
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<style>...<!--[if IE]><style>...</style>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <style>\n|       \"...<!--[if IE]><style>...\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test174
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<title><!--<title></title>--></title>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <title>\n|       \"<!--<title>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test175
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<title>&lt;/title></title>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <title>\n|       \"</title>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test176
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<title>foo/title><link></head><body>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <title>\n|       \"foo/title><link></head><body>X\"\n|   <body>\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test177
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noscript><!--<noscript></noscript>--></noscript>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <noscript>\n|       \"<!--<noscript>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test178
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noscript><!--</noscript>X<noscript>--></noscript>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <noscript>\n|       \"<!--\"\n|   <body>\n|     \"X\"\n|     <noscript>\n|       \"-->\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test179
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noscript><iframe></noscript>X"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <noscript>\n|       \"<iframe>\"\n|   <body>\n|     \"X\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test180
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noframes><!--<noframes></noframes>--></noframes>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <noframes>\n|       \"<!--<noframes>\"\n|   <body>\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test181
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noframes><body><script><!--...</script></body></noframes></html>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|     <noframes>\n|       \"<body><script><!--...</script></body>\"\n|   <body>\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test182
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<textarea><!--<textarea></textarea>--></textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"<!--<textarea>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test183
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<textarea>&lt;/textarea></textarea>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <textarea>\n|       \"</textarea>\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test184
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<iframe><!--<iframe></iframe>--></iframe>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <iframe>\n|       \"<!--<iframe>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test185
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<iframe>...<!--X->...<!--/X->...</iframe>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <iframe>\n|       \"...<!--X->...<!--/X->...\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test186
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<xmp><!--<xmp></xmp>--></xmp>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <xmp>\n|       \"<!--<xmp>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test187
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<noembed><!--<noembed></noembed>--></noembed>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <html>\n|   <head>\n|   <body>\n|     <noembed>\n|       \"<!--<noembed>\"\n|     \"-->\"\n");
    HTMLAssertParserState(parser, 2, fixture);
}

- (void)test188
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><table>\n"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <table>\n|       \"\n\"\n");
    HTMLAssertParserState(parser, 1, fixture);
}

- (void)test189
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><table><td><span><font></span><span>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <table>\n|       <tbody>\n|         <tr>\n|           <td>\n|             <span>\n|               <font>\n|             <font>\n|               <span>\n");
    HTMLAssertParserState(parser, 3, fixture);
}

- (void)test190
{
    HTMLParser *parser = [[HTMLParser alloc] initWithString:@"<!doctype html><form><table></form><form></table></form>"];
    NSArray *fixture = ReifiedTreeForTestDocument(@"| <!DOCTYPE html>\n| <html>\n|   <head>\n|   <body>\n|     <form>\n|       <table>\n|         <form>\n");
    HTMLAssertParserState(parser, 5, fixture);
}

@end
